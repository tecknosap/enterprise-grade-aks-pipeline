# ===============================
# Trigger on main branch
# ===============================
trigger:
  branches:
    include:
      - main  

# ===============================
# Agent Pool
# ===============================
pool:
  vmImage: ubuntu-latest

# ===============================
# Global Variables
# ===============================
variables:
  resource-rg: 'az-01-rg'
  stant: 'stro90123wss'
  container: 'tfstate'
  key: 'terraform.tfstate'

# ===============================
# Stage: Terraform Validate
# ===============================
stages:
- stage: tfvalidate
  jobs:
    - job: validate
      continueOnError: false
      steps:

        # ===============================
        # Install Terraform
        # ===============================
        - task: TerraformInstaller@1
          displayName: Install Terraform
          inputs:
            terraformVersion: 'latest'

        # ===============================
        # Terraform Init
        # ===============================
        - task: TerraformTaskV4@4
          displayName: Initialize Terraform Backend
          inputs:
            provider: 'azurerm'
            command: 'init'
            workingDirectory: '$(System.DefaultWorkingDirectory)/teckno/terraform'
            backendServiceArm: 'Azure-DevOps-SP'
            backendAzureRmResourceGroupName: '$(resource-rg)'
            backendAzureRmStorageAccountName: '$(stant)'
            backendAzureRmContainerName: '$(container)'
            backendAzureRmKey: '$(key)'
            allowTelemetryCollection: false
            commandOptions: '-reconfigure'

        # ===============================
        # Terraform Validate
        # ===============================
        - task: TerraformTaskV4@4
          displayName: Validate Terraform Configuration
          inputs:
            provider: 'azurerm'
            command: 'validate'
            workingDirectory: '$(System.DefaultWorkingDirectory)/teckno/terraform'

        # ===============================
        # Install Checkov
        # ===============================
        - script: |
            pip3 install checkov
          displayName: Install Checkov

        # ===============================
        # Run Checkov to Scan Terraform Code (Soft Fail)
        # ===============================
        - script: |
            checkov -d $(System.DefaultWorkingDirectory)/teckno/terraform --soft-fail
          displayName: Run Checkov Scan on Terraform Code

# ===============================
# Stage: Terraform Deploy
# ===============================
- stage: tfdeploy
  condition: succeeded('tfvalidate')
  dependsOn: tfvalidate
  jobs:
    - job: deploy
      steps:

        # ===============================
        # Install Terraform
        # ===============================
        - task: TerraformInstaller@1
          displayName: Install Terraform
          inputs:
            terraformVersion: 'latest'

        # ===============================
        # Terraform Init
        # ===============================
        - task: TerraformTaskV4@4
          displayName: Initialize Terraform Backend
          inputs:
            provider: 'azurerm'
            command: 'init'
            workingDirectory: '$(System.DefaultWorkingDirectory)/teckno/terraform'
            backendServiceArm: 'Azure-DevOps-SP'
            backendAzureRmResourceGroupName: '$(resource-rg)'
            backendAzureRmStorageAccountName: '$(stant)'
            backendAzureRmContainerName: '$(container)'
            backendAzureRmKey: '$(key)'
            allowTelemetryCollection: false
            commandOptions: '-reconfigure'

        # ===============================
        # Terraform Plan
        # ===============================
        - task: TerraformTaskV4@4
          displayName: Plan Terraform Changes
          inputs:
            provider: 'azurerm'
            command: 'plan'
            workingDirectory: '$(System.DefaultWorkingDirectory)/teckno/terraform'
            environmentServiceNameAzureRM: 'Azure-DevOps-SP'
            commandOptions: '-lock-timeout=300s'

        # ===============================
        # Terraform Apply
        # ===============================
        - task: TerraformTaskV4@4
          displayName: Apply Terraform Changes
          inputs:
            provider: 'azurerm'
            command: 'apply'
            workingDirectory: '$(System.DefaultWorkingDirectory)/teckno/terraform'
            environmentServiceNameAzureRM: 'Azure-DevOps-SP'
            commandOptions: '-auto-approve -lock-timeout=300s'
